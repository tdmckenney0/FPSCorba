package FPSCorba;


/**
* FPSCorba/ServerPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from fpscorba.idl
* Tuesday, May 6, 2014 11:33:58 AM EDT
*/

public abstract class ServerPOA extends org.omg.PortableServer.Servant
 implements FPSCorba.ServerOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("updateTables", new java.lang.Integer (0));
    _methods.put ("requestConnect", new java.lang.Integer (1));
    _methods.put ("sendPools", new java.lang.Integer (2));
    _methods.put ("removeWeapon", new java.lang.Integer (3));
    _methods.put ("sendWeapon", new java.lang.Integer (4));
    _methods.put ("sendShield", new java.lang.Integer (5));
    _methods.put ("announceWinner", new java.lang.Integer (6));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // FPSCorba/Server/updateTables
       {
         this.updateTables ();
         out = $rh.createReply();
         break;
       }

       case 1:  // FPSCorba/Server/requestConnect
       {
         FPSCorba.Listener l = FPSCorba.ListenerHelper.read (in);
         this.requestConnect (l);
         out = $rh.createReply();
         break;
       }

       case 2:  // FPSCorba/Server/sendPools
       {
         this.sendPools ();
         out = $rh.createReply();
         break;
       }

       case 3:  // FPSCorba/Server/removeWeapon
       {
         this.removeWeapon ();
         out = $rh.createReply();
         break;
       }


  //This will be sendPools() with weapons removed
       case 4:  // FPSCorba/Server/sendWeapon
       {
         this.sendWeapon ();
         out = $rh.createReply();
         break;
       }

       case 5:  // FPSCorba/Server/sendShield
       {
         this.sendShield ();
         out = $rh.createReply();
         break;
       }

       case 6:  // FPSCorba/Server/announceWinner
       {
         this.announceWinner ();
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:FPSCorba/Server:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Server _this() 
  {
    return ServerHelper.narrow(
    super._this_object());
  }

  public Server _this(org.omg.CORBA.ORB orb) 
  {
    return ServerHelper.narrow(
    super._this_object(orb));
  }


} // class ServerPOA
